name: (Manual) Deploy to Test
on: 
  workflow_dispatch:
    inputs:
      do_backup:
        description: 'Create Backup First?'
        required: true
        type: choice
        options: 
          - 'Yes'
          - 'No'
        default: 'Yes'
      do_notify:
        description: 'Notify Slack Deploy Channel?'
        required: true
        type: choice
        options: 
          - 'Yes'
          - 'No'
        default: 'Yes'
env:
  DO_BACKUP: ${{ github.event.inputs.do_backup }}
  DO_NOTIFY: ${{ github.event.inputs.do_notify }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write
    env:
      GITHUB_CONTEXT: ${{ toJson(github) }}
    steps:
    - uses: actions/checkout@v2
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.PANTHEON_SSH_KEY }}
        config: ${{ vars.SSH_CONFIG }}
        known_hosts: ${{ vars.KNOWN_HOSTS }}
    - name: Install Terminus
      uses: pantheon-systems/terminus-github-actions@main
      with:
        pantheon-machine-token: ${{ secrets.TERMINUS_MACHINE_TOKEN }}
    - name: Deployment Processing
      id: branch-processor
      env:
        TERMINUS_MACHINE_TOKEN: ${{ secrets.TERMINUS_MACHINE_TOKEN }}
        PANTHEON_SITE: ${{ vars.PANTHEON_SITE }}
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
      run: |

        #!/bin/bash
        set +e
        
        if  [ $DO_NOTIFY == "Yes" ]
        then
          # Tell slack we're starting this site
          SLACK_START="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ \n Beginning ${PANTHEON_SITE} TEST deployment workflow \n"
          echo -e "Starting ${PANTHEON_SITE}";
        fi

        if  [ $DO_BACKUP == "Yes" ] 
        then
          echo "Creating Database Backup."
          # Backup DB prior to deploy, 30 day retention
          if  [ $DO_NOTIFY == "Yes" ]
          then
            SLACK_START+="Backing up ${PANTHEON_SITE} TEST database before deploying"
          fi
          curl -X POST -H 'Content-type: application/json' --data "{'text':'${SLACK_START}'}" $SLACK_WEBHOOK
          terminus backup:create --element database --keep-for 30 -- $PANTHEON_SITE.test
        fi
        if  [ $DO_NOTIFY == "Yes" ]
        then
          SLACK="Deploying ${PANTHEON_SITE} site code to TEST"
          curl -X POST -H 'Content-type: application/json' --data "{'text':'${SLACK}'}" $SLACK_WEBHOOK
        fi
        terminus env:deploy --sync-content --note "Test Deployment from Github Actions" --cc --updatedb -- $PANTHEON_SITE.test
        if  [ $DO_NOTIFY == "Yes" ]
        then
          SITE_LINK="https://test-${PANTHEON_SITE}.pantheonsite.io"
          SLACK=":white_check_mark: Finished ${PANTHEON_SITE} TEST deployment. \n ${SITE_LINK}"
          curl -X POST -H 'Content-type: application/json' --data "{'text':'${SLACK}'}" $SLACK_WEBHOOK
        fi
